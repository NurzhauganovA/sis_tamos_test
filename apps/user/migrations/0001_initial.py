# Generated by Django 3.2.21 on 2023-09-25 14:01

import apps.user.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParentMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('contacts', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('iin', models.CharField(max_length=100)),
                ('is_teacher', models.BooleanField(default=False)),
                ('num_of_doc', models.CharField(max_length=100)),
                ('issued_by', models.CharField(max_length=100)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=100)),
                ('work_place', models.CharField(max_length=100)),
                ('work_position', models.CharField(max_length=100)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'ParentMS',
                'verbose_name_plural': 'ParentMS',
                'db_table': 't_Parents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.SmallIntegerField()),
                ('login', models.CharField(max_length=100)),
                ('pass_c', models.CharField(db_column='pass', max_length=100)),
                ('fio', models.CharField(max_length=100)),
                ('iswork', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'UserMS',
                'verbose_name_plural': 'UserMS',
                'db_table': 'spr_Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRoleMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(error_messages={'unique': 'This user role already exists.'}, max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'db_table': 'spr_Role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login', models.CharField(error_messages={'unique': 'A user with that login already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='login')),
                ('fio', models.CharField(max_length=100)),
                ('is_work', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reason_for_deletion', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
            managers=[
                ('objects', apps.user.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_avatar', models.ImageField(blank=True, null=True, upload_to='user/additional_parent/avatar/')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('iin', models.CharField(blank=True, max_length=255, null=True)),
                ('num_of_doc', models.CharField(blank=True, max_length=255, null=True)),
                ('is_teacher', models.BooleanField(default=False)),
                ('issued_by', models.CharField(blank=True, max_length=255, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('contacts', models.CharField(blank=True, max_length=255, null=True)),
                ('work_place', models.CharField(blank=True, max_length=255, null=True)),
                ('work_position', models.CharField(blank=True, max_length=255, null=True)),
                ('main_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='additional_parent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Additional parent',
                'verbose_name_plural': 'Additional parents',
                'db_table': 'additional_parent',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(error_messages={'unique': 'This user role already exists.'}, max_length=150, unique=True)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'db_table': 'user_role',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_avatar', models.ImageField(blank=True, null=True, upload_to='user/avatar/')),
                ('address', models.CharField(max_length=100)),
                ('contacts', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('iin', models.CharField(max_length=100)),
                ('num_of_doc', models.CharField(max_length=100)),
                ('issued_by', models.CharField(max_length=100, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('work_place', models.CharField(blank=True, max_length=100, null=True)),
                ('work_position', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserInfo',
                'verbose_name_plural': 'UserInfo',
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='UserDocFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='user/parent/doc_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_files', to='user.userinfo')),
            ],
            options={
                'verbose_name': 'UserDocFile',
                'verbose_name_plural': 'UserDocFiles',
                'db_table': 'user_doc_file',
            },
        ),
        migrations.CreateModel(
            name='AdditionalParentUserDocFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='user/additional_parent/doc_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('additional_parent_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='additional_parent_user_files', to='user.additionalparent')),
            ],
            options={
                'verbose_name': 'AdditionalParentUserDocFile',
                'verbose_name_plural': 'AdditionalParentUserDocFiles',
                'db_table': 'additional_parent_user_doc_file',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.userrole'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ManyToManyField(related_name='school_employees', to='school.School'),
        ),
    ]
